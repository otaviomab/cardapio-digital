"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-sound";
exports.ids = ["vendor-chunks/use-sound"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-sound/dist/use-sound.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/use-sound/dist/use-sound.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useSound: () => (/* binding */ useSound)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\n\nfunction useOnMount(callback) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(callback, []);\n}\n\nvar _excluded = [\"id\", \"volume\", \"playbackRate\", \"soundEnabled\", \"interrupt\", \"onload\"];\nfunction useSound(src, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$volume = _ref.volume,\n    volume = _ref$volume === void 0 ? 1 : _ref$volume,\n    _ref$playbackRate = _ref.playbackRate,\n    playbackRate = _ref$playbackRate === void 0 ? 1 : _ref$playbackRate,\n    _ref$soundEnabled = _ref.soundEnabled,\n    soundEnabled = _ref$soundEnabled === void 0 ? true : _ref$soundEnabled,\n    _ref$interrupt = _ref.interrupt,\n    interrupt = _ref$interrupt === void 0 ? false : _ref$interrupt,\n    onload = _ref.onload,\n    delegated = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var HowlConstructor = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  var isMounted = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(false);\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(null),\n    duration = _React$useState[0],\n    setDuration = _React$useState[1];\n  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(null),\n    sound = _React$useState2[0],\n    setSound = _React$useState2[1];\n  var handleLoad = function handleLoad() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n    // @ts-ignore\n    setSound(this);\n  };\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(function () {\n    __webpack_require__.e(/*! import() */ \"vendor-chunks/howler\").then(__webpack_require__.t.bind(__webpack_require__, /*! howler */ \"(ssr)/./node_modules/howler/dist/howler.js\", 23)).then(function (mod) {\n      if (!isMounted.current) {\n        var _mod$Howl;\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = (_mod$Howl = mod.Howl) !== null && _mod$Howl !== void 0 ? _mod$Howl : mod[\"default\"].Howl;\n        isMounted.current = true;\n        new HowlConstructor.current(_extends({\n          src: Array.isArray(src) ? src : [src],\n          volume: volume,\n          rate: playbackRate,\n          onload: handleLoad\n        }, delegated));\n      }\n    });\n    return function () {\n      isMounted.current = false;\n    };\n  });\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function () {\n    if (HowlConstructor.current && sound) {\n      setSound(new HowlConstructor.current(_extends({\n        src: Array.isArray(src) ? src : [src],\n        volume: volume,\n        onload: handleLoad\n      }, delegated)));\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function () {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n  }, [sound, volume, playbackRate]);\n  var play = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(function (options) {\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n    if (!sound || !soundEnabled && !options.forceSoundEnabled) {\n      return;\n    }\n    if (interrupt) {\n      sound.stop();\n    }\n    if (options.playbackRate) {\n      sound.rate(options.playbackRate);\n    }\n    sound.play(options.id);\n  }, [sound, soundEnabled, interrupt]);\n  var stop = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(function (id) {\n    if (!sound) {\n      return;\n    }\n    sound.stop(id);\n  }, [sound]);\n  var pause = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(function (id) {\n    if (!sound) {\n      return;\n    }\n    sound.pause(id);\n  }, [sound]);\n  var returnedValue = [play, {\n    sound: sound,\n    stop: stop,\n    pause: pause,\n    duration: duration\n  }];\n  return returnedValue;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useSound);\n\n//# sourceMappingURL=use-sound.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-sound/dist/use-sound.esm.js\n");

/***/ })

};
;