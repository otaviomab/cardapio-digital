"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/orders/[orderId]/page",{

/***/ "(app-pages-browser)/./src/hooks/use-thermal-printer.ts":
/*!******************************************!*\
  !*** ./src/hooks/use-thermal-printer.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useThermalPrinter: () => (/* binding */ useThermalPrinter)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useThermalPrinter auto */ \n// Função auxiliar para formatar moeda\nconst formatCurrency = (value)=>{\n    return new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n    }).format(value);\n};\nfunction useThermalPrinter() {\n    const [isPrinting, setIsPrinting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // No novo modelo, sempre disponível para todos os navegadores\n    const isSupported = true;\n    const hasPrinterAccess = true;\n    const printerName = 'Impressora do Sistema';\n    // Solicitação de acesso à impressora (mantida por compatibilidade)\n    const requestPrinterAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useThermalPrinter.useCallback[requestPrinterAccess]\": async ()=>{\n            return true;\n        }\n    }[\"useThermalPrinter.useCallback[requestPrinterAccess]\"], []);\n    // Função de impressão usando API nativa do navegador\n    const print = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useThermalPrinter.useCallback[print]\": async function(orderData) {\n            let restaurantName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"KRATO CARDÁPIO DIGITAL\";\n            try {\n                var _orderData_customer, _orderData_customer1;\n                setIsPrinting(true);\n                setError(null);\n                // Mapeamento de métodos de pagamento\n                const paymentMethodNames = {\n                    credit_card: \"Cartão de Crédito\",\n                    debit_card: \"Cartão de Débito\",\n                    pix: \"PIX\",\n                    cash: \"Dinheiro\",\n                    meal_voucher: \"Vale-Refeição\",\n                    // Compatibilidade com formatos antigos\n                    credit: \"Cartão de Crédito\",\n                    debit: \"Cartão de Débito\",\n                    wallet: \"Vale-Refeição\",\n                    money: \"Dinheiro\"\n                };\n                // Obter informações do pedido\n                const orderId = orderData._id || orderData.id || orderData.number || '000';\n                const orderDate = new Date(orderData.createdAt || new Date());\n                const formattedDate = orderDate.toLocaleDateString('pt-BR');\n                const formattedTime = orderDate.toLocaleTimeString('pt-BR');\n                // Informações do cliente\n                const customerName = ((_orderData_customer = orderData.customer) === null || _orderData_customer === void 0 ? void 0 : _orderData_customer.name) || 'Cliente';\n                const customerPhone = ((_orderData_customer1 = orderData.customer) === null || _orderData_customer1 === void 0 ? void 0 : _orderData_customer1.phone) || '-';\n                // Tipo de pedido\n                const isDelivery = orderData.orderType === 'delivery' || orderData.deliveryMethod === 'delivery';\n                const orderType = isDelivery ? 'Entrega' : 'Retirada no local';\n                // Endereço de entrega\n                let deliveryAddressText = '';\n                const deliveryAddress = orderData.deliveryAddress || orderData.address;\n                if (isDelivery && deliveryAddress) {\n                    if (typeof deliveryAddress === 'string') {\n                        deliveryAddressText = \"Endere\\xe7o: \".concat(deliveryAddress, \"\\n\");\n                    } else {\n                        // Formatação detalhada do endereço\n                        deliveryAddressText = \"Endere\\xe7o: \".concat(deliveryAddress.street, \", \").concat(deliveryAddress.number).concat(deliveryAddress.complement ? \" - \".concat(deliveryAddress.complement) : '', \"\\n\");\n                        deliveryAddressText += \"Bairro: \".concat(deliveryAddress.neighborhood || '-', \"\\n\");\n                        deliveryAddressText += \"Cidade: \".concat(deliveryAddress.city || '-').concat(deliveryAddress.state ? \" - \".concat(deliveryAddress.state) : '', \"\\n\");\n                        if (deliveryAddress.zipCode) deliveryAddressText += \"CEP: \".concat(deliveryAddress.zipCode, \"\\n\");\n                        if (deliveryAddress.reference) deliveryAddressText += \"Refer\\xeancia: \".concat(deliveryAddress.reference, \"\\n\");\n                    }\n                }\n                // Informações de pagamento\n                const paymentMethod = orderData.paymentMethod || orderData.payment && orderData.payment.method || '-';\n                const formattedPaymentMethod = paymentMethodNames[paymentMethod] || paymentMethod;\n                // Troco\n                let changeText = '';\n                const change = orderData.change || orderData.payment && orderData.payment.change;\n                if ((paymentMethod === 'cash' || paymentMethod === 'money') && change !== undefined) {\n                    changeText = \"Troco para: \".concat(formatCurrency(change), \"\\n\");\n                }\n                // Itens do pedido\n                let items = orderData.items || [];\n                // Garantir que todos os itens tenham categoria\n                items = items.map({\n                    \"useThermalPrinter.useCallback[print]\": (item)=>{\n                        // Itens meio a meio\n                        if (item.isHalfHalf && item.halfHalf) {\n                            // Garantir que as metades tenham categorias\n                            if (item.halfHalf.firstHalf && !item.halfHalf.firstHalf.category) {\n                                item.halfHalf.firstHalf.category = item.category || 'Não classificado';\n                            }\n                            if (item.halfHalf.secondHalf && !item.halfHalf.secondHalf.category) {\n                                item.halfHalf.secondHalf.category = item.category || 'Não classificado';\n                            }\n                        }\n                        // Se não tiver categoria, aplicar uma padrão\n                        if (!item.category) {\n                            return {\n                                ...item,\n                                category: 'Não classificado'\n                            };\n                        }\n                        return item;\n                    }\n                }[\"useThermalPrinter.useCallback[print]\"]);\n                // Gerar texto para itens\n                let itemsText = '';\n                for (const item of items){\n                    itemsText += \"\".concat(item.quantity, \"x \").concat(item.name, \" - \").concat(formatCurrency(item.price * item.quantity), \"\\n\");\n                    // Se for meia a meia, mostrar categorias das metades\n                    if (item.isHalfHalf && item.halfHalf) {\n                        // Obter categorias das metades\n                        let firstHalfCategory = 'Não classificado';\n                        let secondHalfCategory = 'Não classificado';\n                        if (item.halfHalf.firstHalf && item.halfHalf.firstHalf.category) {\n                            firstHalfCategory = item.halfHalf.firstHalf.category;\n                        }\n                        if (item.halfHalf.secondHalf && item.halfHalf.secondHalf.category) {\n                            secondHalfCategory = item.halfHalf.secondHalf.category;\n                        }\n                        // Se não encontrou categoria, tenta obter do item principal\n                        if (firstHalfCategory === 'Não classificado' && item.category) {\n                            firstHalfCategory = item.category;\n                        }\n                        if (secondHalfCategory === 'Não classificado' && item.category) {\n                            secondHalfCategory = item.category;\n                        }\n                        itemsText += \"CATEGORIA (1/2): \".concat(firstHalfCategory, \"\\n\");\n                        itemsText += \"CATEGORIA (2/2): \".concat(secondHalfCategory, \"\\n\");\n                        // Detalhes de meio a meio\n                        itemsText += \"\\xbd \".concat(item.halfHalf.firstHalf.name, \"\\n\");\n                        // Adicionais da primeira metade\n                        if (item.halfHalf.firstHalf.additions && item.halfHalf.firstHalf.additions.length > 0) {\n                            for (const addition of item.halfHalf.firstHalf.additions){\n                                itemsText += \"  + \".concat(addition.name, \"\\n\");\n                            }\n                        }\n                        itemsText += \"\\xbd \".concat(item.halfHalf.secondHalf.name, \"\\n\");\n                        // Adicionais da segunda metade\n                        if (item.halfHalf.secondHalf.additions && item.halfHalf.secondHalf.additions.length > 0) {\n                            for (const addition of item.halfHalf.secondHalf.additions){\n                                itemsText += \"  + \".concat(addition.name, \"\\n\");\n                            }\n                        }\n                    } else {\n                        itemsText += \"CATEGORIA: \".concat(item.category, \"\\n\");\n                        // Adicionais normais\n                        if (item.additions && item.additions.length > 0) {\n                            for (const addition of item.additions){\n                                itemsText += \"  + \".concat(addition.name, \"\\n\");\n                            }\n                        }\n                    }\n                    // Observações do item\n                    if (item.notes || item.observations || item.observation) {\n                        itemsText += \"Obs: \".concat(item.notes || item.observations || item.observation, \"\\n\");\n                    }\n                    itemsText += \"---------------------------\\n\";\n                }\n                // Calcular totais\n                const subtotal = orderData.subtotal || items.reduce({\n                    \"useThermalPrinter.useCallback[print]\": (acc, item)=>acc + item.price * item.quantity\n                }[\"useThermalPrinter.useCallback[print]\"], 0);\n                const deliveryFee = orderData.deliveryFee || orderData.delivery && orderData.delivery.fee || 0;\n                const discount = orderData.discount || 0;\n                const total = orderData.total || subtotal + deliveryFee - discount;\n                // Montar o conteúdo completo do recibo em formato de texto puro\n                const receiptText = \"\\n\".concat(restaurantName, \"\\n\").concat(formattedDate, \" \").concat(formattedTime, \"\\nPEDIDO #\").concat(orderId, \"\\n---------------------------\\n\\nCLIENTE:\\nNome: \").concat(customerName, \"\\nTelefone: \").concat(customerPhone, \"\\n\\nTIPO DE PEDIDO:\\n\").concat(orderType, \"\\n\").concat(isDelivery ? deliveryAddressText : '', \"\\n\\nPAGAMENTO:\\n\").concat(formattedPaymentMethod, \"\\n\").concat(changeText, \"\\n---------------------------\\n\\nITENS DO PEDIDO:\\n\").concat(itemsText, \"\\n\\nSubtotal: \").concat(formatCurrency(subtotal), \"\\nTaxa de entrega: \").concat(formatCurrency(deliveryFee), \"\\n\").concat(discount > 0 ? \"Desconto: -\".concat(formatCurrency(discount), \"\\n\") : '', \"\\nTOTAL: \").concat(formatCurrency(total), \"\\n* * * * * * * * * * * * * * * *\\nObrigado pela prefer\\xeancia!\\n\");\n                // Criar janela de opções de impressão\n                const optionsWindow = window.open('', '_blank');\n                if (!optionsWindow) {\n                    throw new Error('Não foi possível abrir janela de impressão');\n                }\n                // Configurar janela de opções\n                optionsWindow.document.write('\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset=\"utf-8\">\\n  <title>Op\\xe7\\xf5es de Impress\\xe3o</title>\\n  <style>\\n    body {\\n      font-family: Arial, sans-serif;\\n      line-height: 1.6;\\n      max-width: 800px;\\n      margin: 0 auto;\\n      padding: 20px;\\n    }\\n    h1 {\\n      text-align: center;\\n      margin-bottom: 20px;\\n    }\\n    .options {\\n      display: flex;\\n      flex-wrap: wrap;\\n      gap: 20px;\\n      justify-content: center;\\n      margin-bottom: 30px;\\n    }\\n    .option {\\n      border: 1px solid #ccc;\\n      border-radius: 8px;\\n      padding: 20px;\\n      width: 300px;\\n      background-color: #f9f9f9;\\n      cursor: pointer;\\n      transition: all 0.2s;\\n    }\\n    .option:hover {\\n      background-color: #e9e9e9;\\n      transform: translateY(-2px);\\n    }\\n    .option h2 {\\n      margin-top: 0;\\n      color: #333;\\n    }\\n    .option p {\\n      margin-bottom: 0;\\n      color: #666;\\n    }\\n    .button {\\n      display: block;\\n      text-align: center;\\n      background-color: #4CAF50;\\n      color: white;\\n      padding: 10px 20px;\\n      border-radius: 4px;\\n      text-decoration: none;\\n      margin-top: 15px;\\n      border: none;\\n      cursor: pointer;\\n      font-size: 16px;\\n      width: 100%;\\n    }\\n    .button:hover {\\n      background-color: #45a049;\\n    }\\n    .red {\\n      background-color: #f44336;\\n    }\\n    .red:hover {\\n      background-color: #d32f2f;\\n    }\\n    .texto {\\n      white-space: pre-wrap;\\n      border: 1px solid #ddd;\\n      padding: 10px;\\n      background-color: #f5f5f5;\\n      font-family: monospace;\\n      display: none;\\n      margin-top: 20px;\\n      border-radius: 4px;\\n      max-height: 400px;\\n      overflow-y: auto;\\n    }\\n    .close-button {\\n      margin-top: 20px;\\n      text-align: center;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <h1>Op\\xe7\\xf5es de Impress\\xe3o</h1>\\n  \\n  <div class=\"options\">\\n    <div class=\"option\" onclick=\"escolherOpcao(\\'ultraSimples\\')\">\\n      <h2>Impress\\xe3o Ultra-Simples</h2>\\n      <p>Impress\\xe3o sem formata\\xe7\\xe3o, recomendada para impressoras t\\xe9rmicas. Garante m\\xe1xima compatibilidade.</p>\\n      <button class=\"button\" onclick=\"imprimeUltraSimples(event)\">Imprimir Texto Puro</button>\\n    </div>\\n    \\n    <div class=\"option\" onclick=\"escolherOpcao(\\'download\\')\">\\n      <h2>Baixar Arquivo .TXT</h2>\\n      <p>Baixe o recibo como arquivo de texto e imprima-o usando outro aplicativo.</p>\\n      <button class=\"button\" onclick=\"baixarArquivoTexto(event)\">Baixar Arquivo</button>\\n    </div>\\n  </div>\\n\\n  <div id=\"textoRecibo\" class=\"texto\">'.concat(receiptText.replace(/</g, '&lt;').replace(/>/g, '&gt;'), \"</div>\\n\\n  <div class=\\\"close-button\\\">\\n    <button class=\\\"button red\\\" onclick=\\\"window.close()\\\">Fechar</button>\\n  </div>\\n\\n  <script>\\n    function escolherOpcao(opcao) {\\n      if (opcao === 'mostrarTexto') {\\n        document.getElementById('textoRecibo').style.display = 'block';\\n      }\\n    }\\n    \\n    function imprimeUltraSimples(e) {\\n      e.stopPropagation();\\n      \\n      // Abre uma nova janela apenas com o texto\\n      const textoRecibo = document.getElementById('textoRecibo').textContent;\\n      const janelaImpressao = window.open('', '_blank');\\n      \\n      janelaImpressao.document.write(`\\n        <!DOCTYPE html>\\n        <html>\\n        <head>\\n          <title>Impress\\xe3o</title>\\n          <style>\\n            body { \\n              font-family: monospace; \\n              white-space: pre; \\n              margin: 0; \\n              padding: 0;\\n              font-size: 12px;\\n            }\\n            @media print {\\n              @page { \\n                size: auto; \\n                margin: 0mm; \\n              }\\n            }\\n          </style>\\n        </head>\\n        <body>${textoRecibo}</body>\\n        </html>\\n      `);\\n      \\n      janelaImpressao.document.close();\\n      \\n      // Imprimir imediatamente\\n      setTimeout(() => {\\n        janelaImpressao.print();\\n        // N\\xe3o fecha a janela para permitir m\\xfaltiplas tentativas\\n      }, 500);\\n    }\\n    \\n    function baixarArquivoTexto(e) {\\n      e.stopPropagation();\\n      \\n      const textoRecibo = document.getElementById('textoRecibo').textContent;\\n      const blob = new Blob([textoRecibo], { type: 'text/plain' });\\n      const url = URL.createObjectURL(blob);\\n      \\n      const a = document.createElement('a');\\n      a.href = url;\\n      a.download = 'recibo_pedido_\").concat(orderId, \".txt';\\n      document.body.appendChild(a);\\n      a.click();\\n      \\n      setTimeout(() => {\\n        document.body.removeChild(a);\\n        URL.revokeObjectURL(url);\\n      }, 100);\\n    }\\n  </script>\\n</body>\\n</html>\\n      \"));\n                optionsWindow.document.close();\n                setIsPrinting(false);\n                return true;\n            } catch (err) {\n                console.error('Erro ao imprimir:', err);\n                setError(err.message || 'Erro desconhecido ao imprimir');\n                setIsPrinting(false);\n                return false;\n            }\n        }\n    }[\"useThermalPrinter.useCallback[print]\"], []);\n    return {\n        isPrinting,\n        isSupported,\n        hasPrinterAccess,\n        printerName,\n        requestPrinterAccess,\n        print,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-thermal-printer.ts\n"));

/***/ })

});