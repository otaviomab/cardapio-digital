/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/mongodb/route";
exports.ids = ["app/api/mongodb/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmongodb%2Froute&page=%2Fapi%2Fmongodb%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmongodb%2Froute.ts&appDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmongodb%2Froute&page=%2Fapi%2Fmongodb%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmongodb%2Froute.ts&appDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_otaviomarco_Desktop_Projetos_Global_Live_kratodeliv_cardapio_latest_src_app_api_mongodb_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/mongodb/route.ts */ \"(rsc)/./src/app/api/mongodb/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/mongodb/route\",\n        pathname: \"/api/mongodb\",\n        filename: \"route\",\n        bundlePath: \"app/api/mongodb/route\"\n    },\n    resolvedPagePath: \"/Users/otaviomarco/Desktop/Projetos/Global Live/kratodeliv/cardapio_latest/src/app/api/mongodb/route.ts\",\n    nextConfigOutput,\n    userland: _Users_otaviomarco_Desktop_Projetos_Global_Live_kratodeliv_cardapio_latest_src_app_api_mongodb_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZtb25nb2RiJTJGcm91dGUmcGFnZT0lMkZhcGklMkZtb25nb2RiJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbW9uZ29kYiUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm90YXZpb21hcmNvJTJGRGVza3RvcCUyRlByb2pldG9zJTJGR2xvYmFsJTIwTGl2ZSUyRmtyYXRvZGVsaXYlMkZjYXJkYXBpb19sYXRlc3QlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGb3RhdmlvbWFyY28lMkZEZXNrdG9wJTJGUHJvamV0b3MlMkZHbG9iYWwlMjBMaXZlJTJGa3JhdG9kZWxpdiUyRmNhcmRhcGlvX2xhdGVzdCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3VEO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvb3RhdmlvbWFyY28vRGVza3RvcC9Qcm9qZXRvcy9HbG9iYWwgTGl2ZS9rcmF0b2RlbGl2L2NhcmRhcGlvX2xhdGVzdC9zcmMvYXBwL2FwaS9tb25nb2RiL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbW9uZ29kYi9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL21vbmdvZGJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL21vbmdvZGIvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvb3RhdmlvbWFyY28vRGVza3RvcC9Qcm9qZXRvcy9HbG9iYWwgTGl2ZS9rcmF0b2RlbGl2L2NhcmRhcGlvX2xhdGVzdC9zcmMvYXBwL2FwaS9tb25nb2RiL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmongodb%2Froute&page=%2Fapi%2Fmongodb%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmongodb%2Froute.ts&appDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/mongodb/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/mongodb/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mongodb-services */ \"(rsc)/./src/lib/mongodb-services.ts\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n\n\n\n\nasync function GET(request) {\n    const searchParams = request.nextUrl.searchParams;\n    const action = searchParams.get('action');\n    try {\n        switch(action){\n            case 'getCategories':\n                const restaurantId = searchParams.get('restaurantId');\n                const categoryIds = searchParams.get('ids');\n                if (categoryIds) {\n                    // Buscar categorias específicas por IDs\n                    try {\n                        // Conecta ao MongoDB\n                        const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n                        const db = client.db('cardapio_digital');\n                        // Converte a string de IDs em um array\n                        const idArray = categoryIds.split(',');\n                        // Converte os IDs em ObjectIds para a consulta\n                        const objectIds = idArray.map((id)=>{\n                            try {\n                                return new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(id);\n                            } catch (error) {\n                                console.error(`ID inválido: ${id}`);\n                                return null;\n                            }\n                        }).filter((id)=>id !== null);\n                        // Busca as categorias pelo ID\n                        const categories = await db.collection('categories').find({\n                            _id: {\n                                $in: objectIds\n                            }\n                        }).toArray();\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(categories);\n                    } catch (error) {\n                        console.error('Erro ao buscar categorias por IDs:', error);\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'Erro ao buscar categorias'\n                        }, {\n                            status: 500\n                        });\n                    }\n                }\n                // Caso tradicional: buscar categorias por restaurante\n                if (!restaurantId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'restaurantId é obrigatório'\n                    }, {\n                        status: 400\n                    });\n                }\n                const categories = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.getCategories)(restaurantId);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(categories);\n            case 'getProducts':\n                const restaurantIdForProducts = searchParams.get('restaurantId');\n                if (!restaurantIdForProducts) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'restaurantId é obrigatório'\n                    }, {\n                        status: 400\n                    });\n                }\n                const products = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.getProducts)(restaurantIdForProducts);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(products);\n            case 'getOrders':\n                const restaurantIdForOrders = searchParams.get('restaurantId');\n                if (!restaurantIdForOrders) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'restaurantId é obrigatório'\n                    }, {\n                        status: 400\n                    });\n                }\n                console.log('API: Buscando pedidos para restaurantId:', restaurantIdForOrders);\n                const orders = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.getOrders)(restaurantIdForOrders);\n                console.log(`API: ${orders.length} pedidos encontrados`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(orders);\n            case 'getOrder':\n                const orderId = searchParams.get('id');\n                if (!orderId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'id é obrigatório'\n                    }, {\n                        status: 400\n                    });\n                }\n                const order = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.getOrder)(orderId);\n                // Adiciona categorias aos itens do pedido que não as têm\n                if (order && order.items && Array.isArray(order.items)) {\n                    // Verifica quais itens precisam de categorias\n                    const itemsWithoutCategory = order.items.filter((item)=>!item.category);\n                    const hasUpdates = itemsWithoutCategory.length > 0;\n                    if (hasUpdates) {\n                        console.log(`Encontrados ${itemsWithoutCategory.length} itens sem categoria no pedido ${orderId}`);\n                        // Buscar produtos para obter categorias\n                        try {\n                            const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n                            const db = client.db('cardapio_digital');\n                            const productsCollection = db.collection('products');\n                            const categoriesCollection = db.collection('categories');\n                            const ordersCollection = db.collection('orders');\n                            let hasChanges = false;\n                            for (const item of order.items){\n                                if (!item.category) {\n                                    console.log(`Buscando categoria para item \"${item.name}\" (ID: ${item.productId})`);\n                                    // Tenta encontrar o produto pelo ID\n                                    let product;\n                                    try {\n                                        product = await productsCollection.findOne({\n                                            $or: [\n                                                {\n                                                    _id: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(item.productId)\n                                                },\n                                                {\n                                                    id: item.productId\n                                                },\n                                                {\n                                                    productId: item.productId\n                                                }\n                                            ]\n                                        });\n                                        if (product) {\n                                            console.log(`Encontrado produto para item '${item.name}': ${product.name}`);\n                                        } else {\n                                            // Busca por nome se não encontrar por ID\n                                            product = await productsCollection.findOne({\n                                                name: item.name\n                                            });\n                                            if (product) {\n                                                console.log(`Encontrado produto pelo nome: ${product.name}`);\n                                            }\n                                        }\n                                    } catch (e) {\n                                        console.log(`Erro ao buscar produto pelo ID ${item.productId}`, e);\n                                    }\n                                    if (product) {\n                                        let categoryName = null;\n                                        // Tenta obter a categoria de várias fontes\n                                        if (product.category) {\n                                            // Se o produto já tem a categoria diretamente\n                                            categoryName = product.category;\n                                            console.log(`Categoria do produto: ${categoryName}`);\n                                        } else if (product.categoryId) {\n                                            // Se o produto tem um categoryId, busca a categoria\n                                            try {\n                                                const category = await categoriesCollection.findOne({\n                                                    $or: [\n                                                        {\n                                                            _id: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(product.categoryId)\n                                                        },\n                                                        {\n                                                            id: product.categoryId\n                                                        }\n                                                    ]\n                                                });\n                                                if (category) {\n                                                    categoryName = category.name;\n                                                    console.log(`Categoria encontrada pelo ID: ${categoryName}`);\n                                                }\n                                            } catch (e) {\n                                                console.log(`Erro ao buscar categoria pelo ID ${product.categoryId}`, e);\n                                            }\n                                        } else if (product.categoryName) {\n                                            // Alguns produtos podem ter categoryName direto\n                                            categoryName = product.categoryName;\n                                            console.log(`Usando categoryName do produto: ${categoryName}`);\n                                        }\n                                        if (categoryName) {\n                                            // Atualiza o item em memória\n                                            item.category = categoryName;\n                                            hasChanges = true;\n                                            // Atualiza no banco de dados também\n                                            try {\n                                                const updateResult = await ordersCollection.updateOne({\n                                                    _id: new mongodb__WEBPACK_IMPORTED_MODULE_2__.ObjectId(orderId),\n                                                    \"items.productId\": item.productId\n                                                }, {\n                                                    $set: {\n                                                        \"items.$.category\": categoryName\n                                                    }\n                                                });\n                                                console.log(`Atualização no banco: ${updateResult.modifiedCount} item(s) modificado(s)`);\n                                            } catch (updateError) {\n                                                console.error(\"Erro ao atualizar categoria no banco:\", updateError);\n                                            }\n                                        } else {\n                                            console.log(`Não foi possível determinar a categoria para o item '${item.name}'`);\n                                        }\n                                    } else {\n                                        console.log(`Produto não encontrado para item '${item.name}'`);\n                                    }\n                                }\n                            }\n                            if (hasChanges) {\n                                console.log(\"Categorias atualizadas com sucesso para o pedido:\", orderId);\n                            }\n                        } catch (error) {\n                            console.error('Erro ao enriquecer pedido com categorias:', error);\n                        }\n                    }\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(order);\n            case 'getDashboardStats':\n                {\n                    const restaurantIdForStats = searchParams.get('restaurantId');\n                    if (!restaurantIdForStats) {\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'restaurantId é obrigatório'\n                        }, {\n                            status: 400\n                        });\n                    }\n                    try {\n                        const stats = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.getDashboardStats)(restaurantIdForStats);\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(stats);\n                    } catch (error) {\n                        console.error('Erro ao buscar estatísticas do dashboard:', error);\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'Erro ao buscar estatísticas do dashboard'\n                        }, {\n                            status: 500\n                        });\n                    }\n                }\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Ação inválida'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('Erro na API:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Erro interno do servidor'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    const searchParams = request.nextUrl.searchParams;\n    const action = searchParams.get('action');\n    try {\n        const body = await request.json();\n        switch(action){\n            case 'createCategory':\n                const newCategory = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.createCategory)(body);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(newCategory);\n            case 'updateCategory':\n                try {\n                    const { id: categoryId, ...categoryData } = body;\n                    console.log('Atualizando categoria na API:', {\n                        categoryId,\n                        categoryData\n                    });\n                    if (!categoryId) {\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'ID da categoria é obrigatório'\n                        }, {\n                            status: 400\n                        });\n                    }\n                    const result = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.updateCategory)(categoryId, categoryData);\n                    console.log('Categoria atualizada com sucesso:', result);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        result\n                    });\n                } catch (error) {\n                    console.error('Erro ao atualizar categoria:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: error instanceof Error ? error.message : 'Erro ao atualizar categoria'\n                    }, {\n                        status: 500\n                    });\n                }\n            case 'deleteCategory':\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.deleteCategory)(body.id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            case 'createProduct':\n                console.log('API: Criando produto com dados:', body);\n                const newProduct = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.createProduct)(body);\n                console.log('API: Produto criado com sucesso:', newProduct);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(newProduct);\n            case 'updateProduct':\n                const { id: productId, ...productData } = body;\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.updateProduct)(productId, productData);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            case 'deleteProduct':\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.deleteProduct)(body.id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            case 'createOrder':\n                // Log detalhado de categorias\n                if (body.items && Array.isArray(body.items)) {\n                    console.log('Categorias dos itens enviados para MongoDB:');\n                    body.items.forEach((item)=>{\n                        console.log(`- ${item.name}: categoria [${item.category || 'não definida'}]`);\n                    });\n                }\n                // Não modificamos os itens - usa exatamente o que foi enviado\n                const newOrder = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.createOrder)(body);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(newOrder);\n            case 'updateOrderStatus':\n                const { id, status, message } = body;\n                console.log('API: Atualizando status do pedido', {\n                    id,\n                    status,\n                    message\n                });\n                try {\n                    const updatedOrder = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.updateOrderStatus)(id, status, message);\n                    console.log('API: Status do pedido atualizado com sucesso', {\n                        id,\n                        status,\n                        updatedOrder\n                    });\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        order: updatedOrder\n                    });\n                } catch (error) {\n                    console.error('API: Erro ao atualizar status do pedido:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'Erro ao atualizar status do pedido',\n                        details: error instanceof Error ? error.message : String(error)\n                    }, {\n                        status: 500\n                    });\n                }\n            case 'getOrderStats':\n                {\n                    const { restaurantId, startDate, endDate } = body;\n                    // Validações\n                    if (!restaurantId || !startDate || !endDate) {\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'restaurantId, startDate e endDate são obrigatórios'\n                        }, {\n                            status: 400\n                        });\n                    }\n                    try {\n                        // Logs para debug\n                        console.log('API getOrderStats - Datas recebidas:', {\n                            startDate,\n                            endDate,\n                            startDateObj: new Date(startDate),\n                            endDateObj: new Date(endDate)\n                        });\n                        // Busca as estatísticas\n                        const stats = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.getOrderStats)(restaurantId, new Date(startDate), new Date(endDate));\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(stats);\n                    } catch (error) {\n                        console.error('Erro ao buscar estatísticas:', error);\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'Erro ao buscar estatísticas'\n                        }, {\n                            status: 500\n                        });\n                    }\n                }\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Ação inválida'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('Erro na API:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Erro interno do servidor'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    const searchParams = request.nextUrl.searchParams;\n    const action = searchParams.get('action');\n    const id = searchParams.get('id');\n    if (!id) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'id é obrigatório'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        const body = await request.json();\n        console.log('PUT request recebido:', {\n            action,\n            id,\n            body\n        });\n        switch(action){\n            case 'updateCategory':\n                try {\n                    console.log('Iniciando atualização de categoria:', {\n                        id,\n                        body\n                    });\n                    const result = await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.updateCategory)(id, body);\n                    console.log('Categoria atualizada com sucesso:', result);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n                } catch (error) {\n                    console.error('Erro ao atualizar categoria na API:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: error instanceof Error ? error.message : 'Erro ao atualizar categoria',\n                        details: error\n                    }, {\n                        status: 500\n                    });\n                }\n            case 'updateProduct':\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.updateProduct)(id, body);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            case 'updateOrderStatus':\n                const { status, message } = body;\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.updateOrderStatus)(id, status, message);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Ação inválida'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('Erro geral na API:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Erro interno do servidor',\n            details: error instanceof Error ? error.message : String(error)\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    const searchParams = request.nextUrl.searchParams;\n    const action = searchParams.get('action');\n    const id = searchParams.get('id');\n    if (!id) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'id é obrigatório'\n        }, {\n            status: 400\n        });\n    }\n    try {\n        switch(action){\n            case 'deleteCategory':\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.deleteCategory)(id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            case 'deleteProduct':\n                await (0,_lib_mongodb_services__WEBPACK_IMPORTED_MODULE_1__.deleteProduct)(id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Ação inválida'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('Erro na API:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Erro interno do servidor'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/mongodb/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb-services.ts":
/*!*************************************!*\
  !*** ./src/lib/mongodb-services.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCategory: () => (/* binding */ createCategory),\n/* harmony export */   createOrder: () => (/* binding */ createOrder),\n/* harmony export */   createProduct: () => (/* binding */ createProduct),\n/* harmony export */   deleteCategory: () => (/* binding */ deleteCategory),\n/* harmony export */   deleteProduct: () => (/* binding */ deleteProduct),\n/* harmony export */   getBestSellingProducts: () => (/* binding */ getBestSellingProducts),\n/* harmony export */   getCategories: () => (/* binding */ getCategories),\n/* harmony export */   getDashboardStats: () => (/* binding */ getDashboardStats),\n/* harmony export */   getOrder: () => (/* binding */ getOrder),\n/* harmony export */   getOrderStats: () => (/* binding */ getOrderStats),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   getProducts: () => (/* binding */ getProducts),\n/* harmony export */   getProductsByCategory: () => (/* binding */ getProductsByCategory),\n/* harmony export */   updateCategory: () => (/* binding */ updateCategory),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus),\n/* harmony export */   updateProduct: () => (/* binding */ updateProduct)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _socket__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./socket */ \"(rsc)/./src/lib/socket.ts\");\n\n\n\n\n\n// Funções para Categorias\nasync function getCategories(restaurantId) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('categories');\n    console.log('Buscando categorias para restaurantId:', restaurantId);\n    const categories = await collection.find({\n        restaurantId\n    }).sort({\n        order: 1\n    }).toArray();\n    // Normaliza os IDs antes de retornar\n    const normalizedCategories = categories.map((category)=>({\n            ...category,\n            id: category._id.toString()\n        }));\n    console.log('Categorias encontradas:', normalizedCategories);\n    return normalizedCategories;\n}\nasync function createCategory(category) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('categories');\n    console.log('Criando categoria com dados:', category);\n    // Garante que o restaurantId está presente\n    if (!category.restaurantId) {\n        throw new Error('restaurantId é obrigatório para criar uma categoria');\n    }\n    const result = await collection.insertOne(category);\n    const createdCategory = {\n        ...category,\n        id: result.insertedId.toString(),\n        _id: result.insertedId\n    };\n    console.log('Categoria criada com sucesso:', createdCategory);\n    return createdCategory;\n}\nasync function updateCategory(id, category) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('categories');\n    console.log('Iniciando atualização da categoria no MongoDB:', {\n        id,\n        category\n    });\n    try {\n        // Remove campos que não devem ser atualizados\n        const { _id, id: categoryId, ...updateData } = category;\n        // Primeiro busca a categoria existente\n        const existingCategory = await collection.findOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n        });\n        console.log('Categoria existente:', existingCategory);\n        if (!existingCategory) {\n            console.error('Categoria não encontrada:', id);\n            throw new Error('Categoria não encontrada');\n        }\n        // Mantém o restaurantId original\n        const restaurantId = existingCategory.restaurantId;\n        // Verifica se o restaurantId da requisição corresponde ao da categoria\n        if (category.restaurantId && category.restaurantId !== restaurantId) {\n            console.error('Tentativa de edição não autorizada:', {\n                categoriaRestaurantId: restaurantId,\n                requestRestaurantId: category.restaurantId\n            });\n            throw new Error('Não autorizado a editar esta categoria');\n        }\n        // Prepara os dados para atualização\n        const updateDoc = {\n            $set: {\n                name: updateData.name || existingCategory.name,\n                description: updateData.description || existingCategory.description,\n                order: updateData.order ?? existingCategory.order,\n                restaurantId,\n                updatedAt: new Date()\n            }\n        };\n        console.log('Dados para atualização:', updateDoc);\n        // Faz a atualização\n        const result = await collection.findOneAndUpdate({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n        }, updateDoc, {\n            returnDocument: 'after'\n        });\n        console.log('Resultado da atualização:', result);\n        // Na versão mais recente do MongoDB, o resultado vem diretamente no objeto\n        const updatedDoc = result;\n        if (!updatedDoc) {\n            console.error('Falha na atualização - documento não encontrado:', {\n                id,\n                result\n            });\n            throw new Error('Categoria não encontrada ou não pôde ser atualizada');\n        }\n        // Formata o resultado para retornar\n        const updatedCategory = {\n            ...updatedDoc,\n            id: updatedDoc._id.toString()\n        };\n        // Remove campos que não devem ser retornados\n        delete updatedCategory._id;\n        console.log('Categoria atualizada com sucesso:', updatedCategory);\n        return updatedCategory;\n    } catch (error) {\n        console.error('Erro ao atualizar categoria no MongoDB:', error);\n        throw error;\n    }\n}\nasync function deleteCategory(id) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const db = client.db('cardapio_digital');\n    // Primeiro encontra todos os produtos da categoria\n    const products = await db.collection('products').find({\n        categoryId: id\n    }).toArray();\n    // Deleta as imagens do Supabase Storage\n    for (const product of products){\n        if (product.image) {\n            try {\n                const imageUrl = new URL(product.image);\n                const imagePath = imageUrl.pathname.split('/public/')[1];\n                if (imagePath) {\n                    // Deleta a imagem do storage\n                    await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.storage.from('restaurant-images').remove([\n                        imagePath\n                    ]);\n                }\n            } catch (error) {\n                console.error('Erro ao deletar imagem do produto:', error);\n            }\n        }\n    }\n    // Deleta todos os produtos da categoria\n    await db.collection('products').deleteMany({\n        categoryId: id\n    });\n    // Por fim, deleta a categoria\n    await db.collection('categories').deleteOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n    });\n}\n// Funções para Produtos\nasync function getProducts(restaurantId) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('products');\n    console.log('Buscando produtos para restaurantId:', restaurantId);\n    const products = await collection.find({\n        restaurantId\n    }).toArray();\n    // Normaliza os dados antes de retornar\n    const normalizedProducts = products.map((product)=>({\n            ...product,\n            id: product._id.toString(),\n            image: product.image || product.imageUrl,\n            imageUrl: undefined // Remove campo duplicado\n        }));\n    console.log('Produtos encontrados:', normalizedProducts);\n    return normalizedProducts;\n}\nasync function getProductsByCategory(restaurantId, categoryId) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('products');\n    return collection.find({\n        restaurantId,\n        categoryId\n    }).toArray();\n}\nasync function createProduct(product) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('products');\n    // Normaliza os campos da imagem e garante todos os campos obrigatórios\n    const normalizedProduct = {\n        ...product,\n        image: product.imageUrl || product.image,\n        imageUrl: undefined,\n        available: product.available ?? true,\n        featured: product.featured ?? false,\n        additions: product.additions || [],\n        isPizza: product.isPizza ?? false,\n        allowHalfHalf: product.allowHalfHalf ?? false,\n        createdAt: new Date()\n    };\n    console.log('Salvando produto no MongoDB:', normalizedProduct);\n    const result = await collection.insertOne(normalizedProduct);\n    const createdProduct = {\n        ...normalizedProduct,\n        id: result.insertedId.toString(),\n        _id: undefined // Remove o _id da resposta\n    };\n    console.log('Produto salvo:', createdProduct);\n    return createdProduct;\n}\nasync function updateProduct(id, product) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('products');\n    console.log('Iniciando atualização do produto:', {\n        id,\n        product\n    });\n    try {\n        // Remove campos que não devem ser atualizados\n        const { _id, id: productId, ...updateData } = product;\n        // Primeiro busca o produto existente\n        const existingProduct = await collection.findOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n        });\n        console.log('Produto existente:', existingProduct);\n        if (!existingProduct) {\n            console.error('Produto não encontrado:', id);\n            throw new Error('Produto não encontrado');\n        }\n        // Mantém o restaurantId original\n        const restaurantId = existingProduct.restaurantId;\n        // Verifica se o restaurantId da requisição corresponde ao do produto\n        if (product.restaurantId && product.restaurantId !== restaurantId) {\n            console.error('Tentativa de edição não autorizada:', {\n                produtoRestaurantId: restaurantId,\n                requestRestaurantId: product.restaurantId\n            });\n            throw new Error('Não autorizado a editar este produto');\n        }\n        // Prepara os dados para atualização\n        const updateDoc = {\n            $set: {\n                name: updateData.name || existingProduct.name,\n                description: updateData.description || existingProduct.description,\n                price: updateData.price ?? existingProduct.price,\n                categoryId: updateData.categoryId || existingProduct.categoryId,\n                available: updateData.available ?? existingProduct.available,\n                featured: updateData.featured ?? existingProduct.featured,\n                additions: updateData.additions || existingProduct.additions,\n                image: updateData.image ?? existingProduct.image,\n                isPizza: updateData.isPizza ?? existingProduct.isPizza ?? false,\n                allowHalfHalf: updateData.allowHalfHalf ?? existingProduct.allowHalfHalf ?? false,\n                restaurantId,\n                updatedAt: new Date()\n            }\n        };\n        console.log('Dados para atualização:', updateDoc);\n        // Faz a atualização\n        const result = await collection.findOneAndUpdate({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n        }, updateDoc, {\n            returnDocument: 'after'\n        });\n        console.log('Resultado da atualização:', result);\n        if (!result) {\n            console.error('Falha na atualização - produto não encontrado:', {\n                id,\n                result\n            });\n            throw new Error('Produto não encontrado ou não pôde ser atualizado');\n        }\n        // Formata o resultado para retornar\n        const updatedProduct = {\n            ...result,\n            id: result._id.toString()\n        };\n        // Remove campos que não devem ser retornados\n        delete updatedProduct._id;\n        console.log('Produto atualizado com sucesso:', updatedProduct);\n        return updatedProduct;\n    } catch (error) {\n        console.error('Erro ao atualizar produto:', error);\n        throw error;\n    }\n}\nasync function deleteProduct(id) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('products');\n    await collection.deleteOne({\n        _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n    });\n}\n// Funções para Pedidos\nasync function getOrders(restaurantId) {\n    try {\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectToDatabase)();\n        const orders = await db.collection('orders').find({\n            restaurantId\n        }).sort({\n            createdAt: -1\n        }).toArray();\n        return orders;\n    } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n        throw new Error('Erro ao buscar pedidos');\n    }\n}\nasync function getOrder(id) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('orders');\n    console.log('Buscando pedido com ID:', id);\n    try {\n        const order = await collection.findOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(id)\n        });\n        if (!order) {\n            console.log('Pedido não encontrado:', id);\n            return null;\n        }\n        // Debug para verificar a presença do campo categoria nos itens\n        if (order.items && Array.isArray(order.items)) {\n            console.log('Depuração de itens do pedido no MongoDB:');\n            order.items.forEach((item, index)=>{\n                console.log(`MongoDB - Item ${index + 1}: ${item.name}`);\n                console.log('Campos disponíveis:', Object.keys(item));\n                console.log('Categoria do item:', item.category || 'NÃO ENCONTRADA');\n            });\n        }\n        // Normaliza o ID antes de retornar\n        const normalizedOrder = {\n            ...order,\n            id: order._id.toString(),\n            _id: order._id.toString() // Mantém _id como string para compatibilidade\n        };\n        console.log('Pedido encontrado:', normalizedOrder);\n        return normalizedOrder;\n    } catch (error) {\n        console.error('Erro ao buscar pedido:', error);\n        throw error;\n    }\n}\nasync function createOrder(order) {\n    try {\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectToDatabase)();\n        // Adiciona data de criação e garante que orderType esteja definido\n        const orderWithTimestamp = {\n            ...order,\n            // Garante que orderType esteja definido (compatibilidade com deliveryMethod)\n            orderType: order.orderType || order.deliveryMethod || 'delivery',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n        const result = await db.collection('orders').insertOne(orderWithTimestamp);\n        // Recupera o pedido completo com o ID gerado\n        const createdOrder = {\n            ...orderWithTimestamp,\n            _id: result.insertedId.toString()\n        };\n        // Emite evento via Socket.IO para notificar sobre o novo pedido\n        (0,_socket__WEBPACK_IMPORTED_MODULE_3__.emitToRestaurant)(`new-order-${order.restaurantId}`, order.restaurantId, createdOrder);\n        // Também emite no novo formato (sem sufixo)\n        (0,_socket__WEBPACK_IMPORTED_MODULE_3__.emitToRestaurant)('new-order', order.restaurantId, createdOrder);\n        return createdOrder;\n    } catch (error) {\n        console.error('Erro ao criar pedido:', error);\n        throw new Error('Erro ao criar pedido');\n    }\n}\nasync function updateOrderStatus(orderId, status, message) {\n    try {\n        console.log('MongoDB Service: Iniciando atualização de status do pedido', {\n            orderId,\n            status,\n            message\n        });\n        const { db } = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectToDatabase)();\n        // Verifica se o ID é válido\n        let objectId;\n        try {\n            objectId = new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(orderId);\n            console.log('MongoDB Service: ID do pedido válido', orderId);\n        } catch (error) {\n            console.error('MongoDB Service: ID do pedido inválido', orderId);\n            throw new Error('ID do pedido inválido');\n        }\n        // Atualiza o pedido\n        const updateResult = await db.collection('orders').updateOne({\n            _id: objectId\n        }, {\n            $set: {\n                status,\n                updatedAt: new Date().toISOString()\n            }\n        });\n        console.log('MongoDB Service: Resultado da atualização', {\n            orderId,\n            matchedCount: updateResult.matchedCount,\n            modifiedCount: updateResult.modifiedCount\n        });\n        if (updateResult.matchedCount === 0) {\n            console.error('MongoDB Service: Pedido não encontrado', orderId);\n            throw new Error('Pedido não encontrado');\n        }\n        // Busca o pedido atualizado para enviar via WebSocket\n        const updatedOrder = await db.collection('orders').findOne({\n            _id: objectId\n        });\n        if (!updatedOrder) {\n            console.error('MongoDB Service: Pedido não encontrado após atualização', orderId);\n            throw new Error('Pedido não encontrado após atualização');\n        }\n        console.log('MongoDB Service: Pedido atualizado com sucesso', {\n            orderId,\n            status,\n            restaurantId: updatedOrder.restaurantId\n        });\n        // Emite evento via Socket.IO para notificar sobre a atualização do pedido\n        const emitResult = (0,_socket__WEBPACK_IMPORTED_MODULE_3__.emitToRestaurant)(`order-updated-${updatedOrder.restaurantId}`, updatedOrder.restaurantId, updatedOrder);\n        console.log('MongoDB Service: Resultado da emissão do evento', {\n            event: `order-updated-${updatedOrder.restaurantId}`,\n            room: updatedOrder.restaurantId,\n            result: emitResult\n        });\n        return updatedOrder;\n    } catch (error) {\n        console.error('MongoDB Service: Erro ao atualizar status do pedido:', error);\n        throw error;\n    }\n}\n// Funções para Relatórios\nasync function getOrderStats(restaurantId, startDate, endDate) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const db = client.db('cardapio_digital');\n    const ordersCollection = db.collection('orders');\n    console.log('getOrderStats - Parâmetros recebidos:', {\n        restaurantId,\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString()\n    });\n    // Buscar todos os pedidos do restaurante e filtrar por data em memória\n    const allOrders = await ordersCollection.find({\n        restaurantId\n    }).toArray();\n    // Filtra pedidos por data\n    const startTimestamp = startDate.getTime();\n    const endTimestamp = endDate.getTime();\n    const filteredOrders = allOrders.filter((order)=>{\n        // Converte a string de data para timestamp\n        const orderDate = new Date(order.createdAt);\n        const orderTimestamp = orderDate.getTime();\n        return orderTimestamp >= startTimestamp && orderTimestamp <= endTimestamp && ![\n            'cancelled',\n            'rejected'\n        ].includes(order.status);\n    });\n    console.log(`getOrderStats - Encontrados ${filteredOrders.length} pedidos no período`);\n    // Calcula estatísticas básicas\n    const totalOrders = filteredOrders.length;\n    const totalRevenue = filteredOrders.reduce((sum, order)=>sum + (order.total || 0), 0);\n    const averageTicket = totalOrders > 0 ? totalRevenue / totalOrders : 0;\n    // Calcula tempo médio de entrega (pedidos delivery)\n    const deliveryOrders = filteredOrders.filter((o)=>o.orderType === 'delivery' && o.statusUpdates && o.statusUpdates.length > 0);\n    let deliveryTime = 0;\n    if (deliveryOrders.length > 0) {\n        const totalDeliveryTime = deliveryOrders.reduce((sum, order)=>{\n            const lastUpdate = order.statusUpdates[order.statusUpdates.length - 1];\n            if (lastUpdate && lastUpdate.timestamp) {\n                const start = new Date(order.createdAt).getTime();\n                const end = new Date(lastUpdate.timestamp).getTime();\n                return sum + (end - start) / 60000 // minutos\n                ;\n            }\n            return sum;\n        }, 0);\n        deliveryTime = totalDeliveryTime / deliveryOrders.length;\n    }\n    // Produtos mais vendidos\n    const productsMap = new Map();\n    filteredOrders.forEach((order)=>{\n        if (order.items && Array.isArray(order.items)) {\n            order.items.forEach((item)=>{\n                const id = item.id || item.productId;\n                if (!productsMap.has(id)) {\n                    productsMap.set(id, {\n                        _id: id,\n                        name: item.name,\n                        quantity: 0,\n                        revenue: 0\n                    });\n                }\n                const product = productsMap.get(id);\n                product.quantity += item.quantity || 1;\n                product.revenue += item.price * (item.quantity || 1);\n            });\n        }\n    });\n    const bestSellingProducts = Array.from(productsMap.values()).sort((a, b)=>b.quantity - a.quantity).slice(0, 10).map(({ _id, ...rest })=>({\n            ...rest\n        }));\n    // Faturamento por dia\n    const revenueByDayMap = new Map();\n    filteredOrders.forEach((order)=>{\n        const date = new Date(order.createdAt);\n        const dateString = date.toISOString().split('T')[0] // YYYY-MM-DD\n        ;\n        if (!revenueByDayMap.has(dateString)) {\n            revenueByDayMap.set(dateString, 0);\n        }\n        revenueByDayMap.set(dateString, revenueByDayMap.get(dateString) + (order.total || 0));\n    });\n    const revenueByDay = Array.from(revenueByDayMap.entries()).map(([date, value])=>({\n            date,\n            value\n        })).sort((a, b)=>a.date.localeCompare(b.date));\n    // Pedidos por horário\n    const ordersByHourMap = new Map();\n    filteredOrders.forEach((order)=>{\n        const date = new Date(order.createdAt);\n        const hour = `${date.getHours()}h`;\n        if (!ordersByHourMap.has(hour)) {\n            ordersByHourMap.set(hour, 0);\n        }\n        ordersByHourMap.set(hour, ordersByHourMap.get(hour) + 1);\n    });\n    const ordersByHour = Array.from(ordersByHourMap.entries()).map(([hour, quantity])=>({\n            hour,\n            quantity\n        })).sort((a, b)=>{\n        const hourA = parseInt(a.hour);\n        const hourB = parseInt(b.hour);\n        return hourA - hourB;\n    });\n    // Retorna resultado final\n    return {\n        totalOrders,\n        totalRevenue,\n        averageTicket,\n        deliveryTime,\n        bestSellingProducts,\n        revenueByDay,\n        ordersByHour\n    };\n}\nasync function getBestSellingProducts(restaurantId, startDate, endDate) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const collection = client.db('cardapio_digital').collection('orders');\n    return collection.aggregate([\n        {\n            $match: {\n                restaurantId,\n                createdAt: {\n                    $gte: startDate,\n                    $lte: endDate\n                },\n                status: {\n                    $nin: [\n                        'cancelled',\n                        'rejected'\n                    ]\n                }\n            }\n        },\n        {\n            $unwind: '$items'\n        },\n        {\n            $group: {\n                _id: '$items.id',\n                name: {\n                    $first: '$items.name'\n                },\n                quantity: {\n                    $sum: '$items.quantity'\n                },\n                revenue: {\n                    $sum: {\n                        $multiply: [\n                            '$items.price',\n                            '$items.quantity'\n                        ]\n                    }\n                }\n            }\n        },\n        {\n            $sort: {\n                quantity: -1\n            }\n        },\n        {\n            $limit: 5\n        }\n    ]).toArray();\n}\n// Funções para Dashboard\nasync function getDashboardStats(restaurantId) {\n    const client = await _mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const ordersCollection = client.db('cardapio_digital').collection('orders');\n    // Data de hoje\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    // Pedidos de hoje\n    const todayOrders = await ordersCollection.countDocuments({\n        restaurantId,\n        createdAt: {\n            $gte: today\n        }\n    });\n    // Pedidos em andamento\n    const activeOrders = await ordersCollection.countDocuments({\n        restaurantId,\n        status: {\n            $in: [\n                'pending',\n                'confirmed',\n                'preparing',\n                'ready',\n                'out_for_delivery'\n            ]\n        }\n    });\n    // Faturamento do dia\n    const todayRevenue = await ordersCollection.aggregate([\n        {\n            $match: {\n                restaurantId,\n                createdAt: {\n                    $gte: today\n                },\n                status: {\n                    $nin: [\n                        'cancelled',\n                        'rejected'\n                    ]\n                }\n            }\n        },\n        {\n            $group: {\n                _id: null,\n                total: {\n                    $sum: '$total'\n                }\n            }\n        }\n    ]).toArray();\n    // Ticket médio do dia\n    const averageTicket = todayOrders > 0 ? (todayRevenue[0]?.total || 0) / todayOrders : 0;\n    // Buscar pedidos recentes\n    const recentOrders = await ordersCollection.find({\n        restaurantId\n    }).sort({\n        createdAt: -1\n    }).limit(5).toArray();\n    // Formata os pedidos para retornar\n    const formattedOrders = recentOrders.map((order)=>({\n            ...order,\n            id: order._id.toString(),\n            _id: undefined\n        }));\n    return {\n        todayOrders,\n        activeOrders,\n        todayRevenue: todayRevenue[0]?.total || 0,\n        averageTicket,\n        recentOrders: formattedOrders\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb-services.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ connectToDatabase),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nif (!process.env.MONGODB_URI) {\n    throw new Error('Por favor, defina a variável de ambiente MONGODB_URI');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {};\nlet client;\nlet clientPromise;\nif (true) {\n    // Em desenvolvimento, use uma variável global para preservar o valor\n    // entre recarregamentos causados por Hot Reloading.\n    let globalWithMongo = global;\n    if (!globalWithMongo._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        globalWithMongo._mongoClientPromise = client.connect();\n    }\n    clientPromise = globalWithMongo._mongoClientPromise;\n} else {}\n// Função para conectar ao banco de dados\nasync function connectToDatabase() {\n    const client = await clientPromise;\n    const db = client.db('cardapio_digital');\n    return {\n        client,\n        db\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUVyQyxJQUFJLENBQUNDLFFBQVFDLEdBQUcsQ0FBQ0MsV0FBVyxFQUFFO0lBQzVCLE1BQU0sSUFBSUMsTUFBTTtBQUNsQjtBQUVBLE1BQU1DLE1BQU1KLFFBQVFDLEdBQUcsQ0FBQ0MsV0FBVztBQUNuQyxNQUFNRyxVQUFVLENBQUM7QUFFakIsSUFBSUM7QUFDSixJQUFJQztBQUVKLElBQUlQLElBQXNDLEVBQUU7SUFDMUMscUVBQXFFO0lBQ3JFLG9EQUFvRDtJQUNwRCxJQUFJUSxrQkFBa0JDO0lBSXRCLElBQUksQ0FBQ0QsZ0JBQWdCRSxtQkFBbUIsRUFBRTtRQUN4Q0osU0FBUyxJQUFJUCxnREFBV0EsQ0FBQ0ssS0FBS0M7UUFDOUJHLGdCQUFnQkUsbUJBQW1CLEdBQUdKLE9BQU9LLE9BQU87SUFDdEQ7SUFDQUosZ0JBQWdCQyxnQkFBZ0JFLG1CQUFtQjtBQUNyRCxPQUFPLEVBSU47QUFFRCx5Q0FBeUM7QUFDbEMsZUFBZUU7SUFDcEIsTUFBTU4sU0FBUyxNQUFNQztJQUNyQixNQUFNTSxLQUFLUCxPQUFPTyxFQUFFLENBQUM7SUFDckIsT0FBTztRQUFFUDtRQUFRTztJQUFHO0FBQ3RCO0FBRUEsaUVBQWVOLGFBQWFBLEVBQUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vdGF2aW9tYXJjby9EZXNrdG9wL1Byb2pldG9zL0dsb2JhbCBMaXZlL2tyYXRvZGVsaXYvY2FyZGFwaW9fbGF0ZXN0L3NyYy9saWIvbW9uZ29kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gJ21vbmdvZGInXG5cbmlmICghcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdQb3IgZmF2b3IsIGRlZmluYSBhIHZhcmnDoXZlbCBkZSBhbWJpZW50ZSBNT05HT0RCX1VSSScpXG59XG5cbmNvbnN0IHVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJXG5jb25zdCBvcHRpb25zID0ge31cblxubGV0IGNsaWVudFxubGV0IGNsaWVudFByb21pc2U6IFByb21pc2U8TW9uZ29DbGllbnQ+XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAvLyBFbSBkZXNlbnZvbHZpbWVudG8sIHVzZSB1bWEgdmFyacOhdmVsIGdsb2JhbCBwYXJhIHByZXNlcnZhciBvIHZhbG9yXG4gIC8vIGVudHJlIHJlY2FycmVnYW1lbnRvcyBjYXVzYWRvcyBwb3IgSG90IFJlbG9hZGluZy5cbiAgbGV0IGdsb2JhbFdpdGhNb25nbyA9IGdsb2JhbCBhcyB0eXBlb2YgZ2xvYmFsVGhpcyAmIHtcbiAgICBfbW9uZ29DbGllbnRQcm9taXNlPzogUHJvbWlzZTxNb25nb0NsaWVudD5cbiAgfVxuXG4gIGlmICghZ2xvYmFsV2l0aE1vbmdvLl9tb25nb0NsaWVudFByb21pc2UpIHtcbiAgICBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCBvcHRpb25zKVxuICAgIGdsb2JhbFdpdGhNb25nby5fbW9uZ29DbGllbnRQcm9taXNlID0gY2xpZW50LmNvbm5lY3QoKVxuICB9XG4gIGNsaWVudFByb21pc2UgPSBnbG9iYWxXaXRoTW9uZ28uX21vbmdvQ2xpZW50UHJvbWlzZVxufSBlbHNlIHtcbiAgLy8gRW0gcHJvZHXDp8Ojbywgw6kgbWVsaG9yIG7Do28gdXNhciB1bWEgdmFyacOhdmVsIGdsb2JhbC5cbiAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSwgb3B0aW9ucylcbiAgY2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KClcbn1cblxuLy8gRnVuw6fDo28gcGFyYSBjb25lY3RhciBhbyBiYW5jbyBkZSBkYWRvc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbm5lY3RUb0RhdGFiYXNlKCkge1xuICBjb25zdCBjbGllbnQgPSBhd2FpdCBjbGllbnRQcm9taXNlXG4gIGNvbnN0IGRiID0gY2xpZW50LmRiKCdjYXJkYXBpb19kaWdpdGFsJylcbiAgcmV0dXJuIHsgY2xpZW50LCBkYiB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsaWVudFByb21pc2UgIl0sIm5hbWVzIjpbIk1vbmdvQ2xpZW50IiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfVVJJIiwiRXJyb3IiLCJ1cmkiLCJvcHRpb25zIiwiY2xpZW50IiwiY2xpZW50UHJvbWlzZSIsImdsb2JhbFdpdGhNb25nbyIsImdsb2JhbCIsIl9tb25nb0NsaWVudFByb21pc2UiLCJjb25uZWN0IiwiY29ubmVjdFRvRGF0YWJhc2UiLCJkYiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/socket.ts":
/*!***************************!*\
  !*** ./src/lib/socket.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   emitToRestaurant: () => (/* binding */ emitToRestaurant),\n/* harmony export */   getSocketIO: () => (/* binding */ getSocketIO)\n/* harmony export */ });\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io */ \"(rsc)/./node_modules/socket.io/wrapper.mjs\");\n/**\n * SocketService - Serviço de comunicação em tempo real\n * \n * Este serviço gerencia a comunicação em tempo real entre cliente e servidor\n * utilizando Socket.IO, permitindo atualizações instantâneas na interface.\n * \n * Responsabilidades:\n * - Gerenciar a instância do Socket.IO\n * - Emitir eventos para salas específicas (restaurantes)\n * - Abstrair a comunicação em tempo real para o resto da aplicação\n * - Lidar com diferenças entre cliente e servidor\n * \n * Uso típico:\n * - Notificações de novos pedidos\n * - Atualizações de status de pedidos\n * - Comunicação entre dashboard e cozinha\n */ \n// Função para obter a instância do Socket.IO\nconst getSocketIO = (res)=>{\n    if (res && res.socket && res.socket.server.io) {\n        return res.socket.server.io;\n    }\n    if (global.io) {\n        return global.io;\n    }\n    return null;\n};\n// Função para emitir eventos para um restaurante específico\nconst emitToRestaurant = (event, restaurantId, data)=>{\n    try {\n        console.log(`Socket: Tentando emitir evento ${event} para restaurante ${restaurantId}`, {\n            dataType: typeof data,\n            hasData: !!data,\n            isServer: \"undefined\" === 'undefined',\n            hasGlobalIo:  true && !!global.io\n        });\n        // Verifica se o restaurantId é válido\n        if (!restaurantId) {\n            console.error('Socket: restaurantId não fornecido para emissão de evento', {\n                event,\n                restaurantId\n            });\n            return false;\n        }\n        // Verifica se o Socket.IO está disponível globalmente\n        if ( true && global.io) {\n            try {\n                console.log(`Socket: Emitindo evento ${event} para restaurante ${restaurantId} (servidor)`);\n                global.io.to(restaurantId).emit(event, data);\n                return true;\n            } catch (serverEmitError) {\n                console.error('Socket: Erro ao emitir evento no servidor:', serverEmitError);\n                return false;\n            }\n        } else {\n            // No cliente, faz uma chamada para o endpoint interno\n            console.log(`Socket: Emitindo evento ${event} para restaurante ${restaurantId} (cliente)`);\n            // Usa Promise para permitir tratamento de erros assíncrono\n            const emitPromise = fetch('/api/socket', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    event,\n                    room: restaurantId,\n                    data\n                })\n            }).then((response)=>{\n                if (!response.ok) {\n                    console.error('Socket: Erro na resposta da API de socket', {\n                        status: response.status,\n                        statusText: response.statusText\n                    });\n                    return response.json().then((data)=>{\n                        throw new Error(`Erro na API: ${data.error || 'Desconhecido'}`);\n                    });\n                }\n                console.log(`Socket: Evento ${event} emitido com sucesso via API`);\n                return response.json();\n            }).catch((error)=>{\n                console.error('Socket: Erro ao chamar API de socket:', error);\n                throw error;\n            });\n            // Inicia a Promise mas não espera por ela (fire and forget)\n            emitPromise.catch((error)=>{\n                console.error('Socket: Erro não tratado na emissão do evento:', error);\n            });\n            return true;\n        }\n    } catch (error) {\n        console.error('Socket: Erro ao emitir evento via Socket.IO:', error);\n        return false;\n    }\n};\n/**\n * Inicializa o servidor Socket.IO\n * @param server - O servidor HTTP para anexar o Socket.IO\n * @returns A instância do Socket.IO inicializada\n */ const initSocket = (server)=>{\n    // Se já existir uma instância global, retorna-a\n    if (global.io) {\n        console.log('Socket.IO: Usando instância existente');\n        return global.io;\n    }\n    // Configura as origens permitidas para CORS\n    const allowedOrigins = process.env.ALLOWED_ORIGINS ? process.env.ALLOWED_ORIGINS.split(',') : [\n        'http://localhost:3000'\n    ];\n    console.log('Socket.IO: Inicializando com origens permitidas:', allowedOrigins);\n    // Cria uma nova instância do Socket.IO\n    const io = new socket_io__WEBPACK_IMPORTED_MODULE_0__.Server(server, {\n        cors: {\n            origin: allowedOrigins,\n            methods: [\n                'GET',\n                'POST'\n            ],\n            credentials: true\n        },\n        transports: [\n            'websocket',\n            'polling'\n        ]\n    });\n    // Configura os manipuladores de eventos\n    io.on('connection', (socket)=>{\n        console.log(`Socket.IO: Novo cliente conectado: ${socket.id}`);\n        // Evento para entrar em uma sala (restaurante)\n        socket.on('join-restaurant', (restaurantId)=>{\n            if (!restaurantId) {\n                console.error('Socket.IO: ID do restaurante não fornecido');\n                socket.emit('error', 'ID do restaurante não fornecido');\n                return;\n            }\n            socket.join(restaurantId);\n            console.log(`Socket.IO: Cliente ${socket.id} entrou na sala ${restaurantId}`);\n            socket.emit('joined', {\n                restaurantId,\n                socketId: socket.id\n            });\n        });\n        // Manipulador de eventos de desconexão\n        socket.on('disconnect', ()=>{\n            console.log(`Socket.IO: Cliente desconectado: ${socket.id}`);\n        });\n        // Manipulador de erros do socket\n        socket.on('error', (error)=>{\n            console.error(`Socket.IO: Erro no socket ${socket.id}:`, error);\n        });\n    });\n    // Armazena a instância na variável global\n    global.io = io;\n    console.log('Socket.IO: Servidor inicializado com sucesso');\n    return io;\n};\n// Exporta a função de inicialização como padrão\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initSocket);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/socket.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://vvwihgsstdfoszepafgp.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ2d2loZ3NzdGRmb3N6ZXBhZmdwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzg3MjIyMTEsImV4cCI6MjA1NDI5ODIxMX0.orkmX9S4GRycZIQE_SilwIqD_Qxij2L85leHLLYYVs0\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBRXBELE1BQU1DLGNBQWNDLDBDQUFvQztBQUN4RCxNQUFNRyxrQkFBa0JILGtOQUF5QztBQUUxRCxNQUFNSyxXQUFXUCxtRUFBWUEsQ0FBQ0MsYUFBYUksaUJBQWdCIiwic291cmNlcyI6WyIvVXNlcnMvb3RhdmlvbWFyY28vRGVza3RvcC9Qcm9qZXRvcy9HbG9iYWwgTGl2ZS9rcmF0b2RlbGl2L2NhcmRhcGlvX2xhdGVzdC9zcmMvbGliL3N1cGFiYXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhXG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSFcblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpICJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/next","vendor-chunks/ws","vendor-chunks/socket.io-parser","vendor-chunks/engine.io-parser","vendor-chunks/cookie","vendor-chunks/webidl-conversions","vendor-chunks/@socket.io","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/has-flag","vendor-chunks/engine.io","vendor-chunks/socket.io","vendor-chunks/socket.io-adapter","vendor-chunks/negotiator","vendor-chunks/mime-db","vendor-chunks/vary","vendor-chunks/object-assign","vendor-chunks/mime-types","vendor-chunks/cors","vendor-chunks/base64id","vendor-chunks/accepts"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmongodb%2Froute&page=%2Fapi%2Fmongodb%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmongodb%2Froute.ts&appDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fotaviomarco%2FDesktop%2FProjetos%2FGlobal%20Live%2Fkratodeliv%2Fcardapio_latest&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();