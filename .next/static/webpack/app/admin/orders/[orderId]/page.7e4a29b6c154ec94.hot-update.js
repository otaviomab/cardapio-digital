"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/orders/[orderId]/page",{

/***/ "(app-pages-browser)/./src/hooks/use-thermal-printer.ts":
/*!******************************************!*\
  !*** ./src/hooks/use-thermal-printer.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useThermalPrinter: () => (/* binding */ useThermalPrinter)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useThermalPrinter auto */ \n// Função auxiliar para formatar moeda\nconst formatCurrency = (value)=>{\n    return new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n    }).format(value);\n};\nfunction useThermalPrinter() {\n    const [isPrinting, setIsPrinting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // No novo modelo, sempre disponível para todos os navegadores\n    const isSupported = true;\n    const hasPrinterAccess = true;\n    const printerName = 'Impressora do Sistema';\n    // Solicitação de acesso à impressora (mantida por compatibilidade)\n    const requestPrinterAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useThermalPrinter.useCallback[requestPrinterAccess]\": async ()=>{\n            return true;\n        }\n    }[\"useThermalPrinter.useCallback[requestPrinterAccess]\"], []);\n    // Função de impressão usando API nativa do navegador\n    const print = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useThermalPrinter.useCallback[print]\": async function(orderData) {\n            let restaurantName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"KRATO CARDÁPIO DIGITAL\";\n            try {\n                var _orderData_customer, _orderData_customer1;\n                setIsPrinting(true);\n                setError(null);\n                // Função auxiliar para obter categorias de produtos que não as têm\n                const ensureCategories = {\n                    \"useThermalPrinter.useCallback[print].ensureCategories\": async (items)=>{\n                        const restaurantId = orderData.restaurantId;\n                        if (!restaurantId || !items || !Array.isArray(items)) return items;\n                        // Filtra apenas itens sem categoria\n                        const itemsWithoutCategory = items.filter({\n                            \"useThermalPrinter.useCallback[print].ensureCategories.itemsWithoutCategory\": (item)=>!item.category\n                        }[\"useThermalPrinter.useCallback[print].ensureCategories.itemsWithoutCategory\"]);\n                        if (itemsWithoutCategory.length === 0) return items;\n                        try {\n                            // Busca produtos para tentar encontrar categorias\n                            const response = await fetch(\"/api/mongodb?action=getProducts&restaurantId=\".concat(restaurantId));\n                            if (!response.ok) return items;\n                            const products = await response.json();\n                            if (!products || !Array.isArray(products)) return items;\n                            // Atualiza os itens com as categorias encontradas\n                            return items.map({\n                                \"useThermalPrinter.useCallback[print].ensureCategories\": (item)=>{\n                                    if (item.category) return item;\n                                    // Busca o produto correspondente\n                                    const matchingProduct = products.find({\n                                        \"useThermalPrinter.useCallback[print].ensureCategories.matchingProduct\": (p)=>p._id === item.productId || p.id === item.productId || p.name === item.name\n                                    }[\"useThermalPrinter.useCallback[print].ensureCategories.matchingProduct\"]);\n                                    if (matchingProduct && matchingProduct.category) {\n                                        console.log(\"Categoria encontrada para impress\\xe3o: \".concat(item.name, \" -> \").concat(matchingProduct.category));\n                                        return {\n                                            ...item,\n                                            category: matchingProduct.category\n                                        };\n                                    }\n                                    return item;\n                                }\n                            }[\"useThermalPrinter.useCallback[print].ensureCategories\"]);\n                        } catch (error) {\n                            console.error('Erro ao buscar categorias para impressão:', error);\n                            return items;\n                        }\n                    }\n                }[\"useThermalPrinter.useCallback[print].ensureCategories\"];\n                // Mapeamento de métodos de pagamento\n                const paymentMethodNames = {\n                    credit_card: \"Cartão de Crédito\",\n                    debit_card: \"Cartão de Débito\",\n                    pix: \"PIX\",\n                    cash: \"Dinheiro\",\n                    meal_voucher: \"Vale-Refeição\",\n                    // Compatibilidade com formatos antigos\n                    credit: \"Cartão de Crédito\",\n                    debit: \"Cartão de Débito\",\n                    wallet: \"Vale-Refeição\",\n                    money: \"Dinheiro\"\n                };\n                // Criar uma janela em tela cheia para garantir que os botões fiquem visíveis\n                const printWindow = window.open('', '_blank', 'fullscreen=yes,menubar=no,toolbar=no,location=no,resizable=yes,scrollbars=yes,status=no');\n                if (!printWindow) {\n                    throw new Error('Não foi possível abrir janela de impressão');\n                }\n                // Obter informações do pedido\n                const orderId = orderData._id || orderData.id || orderData.number || '000';\n                const orderDate = new Date(orderData.createdAt || new Date());\n                const formattedDate = orderDate.toLocaleDateString('pt-BR');\n                const formattedTime = orderDate.toLocaleTimeString('pt-BR');\n                // Informações do cliente\n                const customerName = ((_orderData_customer = orderData.customer) === null || _orderData_customer === void 0 ? void 0 : _orderData_customer.name) || 'Cliente';\n                const customerPhone = ((_orderData_customer1 = orderData.customer) === null || _orderData_customer1 === void 0 ? void 0 : _orderData_customer1.phone) || '-';\n                // Tipo de pedido\n                const isDelivery = orderData.orderType === 'delivery' || orderData.deliveryMethod === 'delivery';\n                const orderType = isDelivery ? 'Entrega' : 'Retirada no local';\n                // Endereço de entrega\n                let deliveryAddressHtml = '';\n                const deliveryAddress = orderData.deliveryAddress || orderData.address;\n                if (isDelivery && deliveryAddress) {\n                    if (typeof deliveryAddress === 'string') {\n                        deliveryAddressHtml = \"<div>Endere\\xe7o: \".concat(deliveryAddress, \"</div>\");\n                    } else {\n                        // Formatação detalhada do endereço\n                        deliveryAddressHtml = \"\\n            <div>Endere\\xe7o: \".concat(deliveryAddress.street, \", \").concat(deliveryAddress.number).concat(deliveryAddress.complement ? \" - \".concat(deliveryAddress.complement) : '', \"</div>\\n            <div>Bairro: \").concat(deliveryAddress.neighborhood || '-', \"</div>\\n            <div>Cidade: \").concat(deliveryAddress.city || '-').concat(deliveryAddress.state ? \" - \".concat(deliveryAddress.state) : '', \"</div>\\n            \").concat(deliveryAddress.zipCode ? \"<div>CEP: \".concat(deliveryAddress.zipCode, \"</div>\") : '', \"\\n            \").concat(deliveryAddress.reference ? \"<div>Refer\\xeancia: \".concat(deliveryAddress.reference, \"</div>\") : '', \"\\n          \");\n                    }\n                }\n                // Informações de pagamento\n                const paymentMethod = orderData.paymentMethod || orderData.payment && orderData.payment.method || '-';\n                const formattedPaymentMethod = paymentMethodNames[paymentMethod] || paymentMethod;\n                // Troco\n                const change = orderData.change || orderData.payment && orderData.payment.change;\n                let changeHtml = '';\n                if ((paymentMethod === 'cash' || paymentMethod === 'money') && change !== undefined) {\n                    changeHtml = \"<div>Troco para: \".concat(formatCurrency(change), \"</div>\");\n                }\n                // Itens do pedido\n                let items = orderData.items || [];\n                // Adicionar logs para depuração\n                console.log('[IMPRESSÃO] Estrutura completa do pedido:', JSON.stringify(orderData, null, 2));\n                console.log('[IMPRESSÃO] Itens do pedido antes do processamento:', JSON.stringify(items, null, 2));\n                // Simplificar o processamento e garantir que todos os itens tenham categoria\n                items = items.map({\n                    \"useThermalPrinter.useCallback[print]\": (item)=>{\n                        // Logs específicos para itens meio a meio\n                        if (item.isHalfHalf && item.halfHalf) {\n                            var _item_halfHalf_firstHalf, _item_halfHalf_secondHalf;\n                            console.log('[IMPRESSÃO] Item meio a meio encontrado:', item.name);\n                            console.log('[IMPRESSÃO] Estrutura do item meio a meio:', JSON.stringify(item, null, 2));\n                            console.log('[IMPRESSÃO] Categoria primeira metade:', (_item_halfHalf_firstHalf = item.halfHalf.firstHalf) === null || _item_halfHalf_firstHalf === void 0 ? void 0 : _item_halfHalf_firstHalf.category);\n                            console.log('[IMPRESSÃO] Categoria segunda metade:', (_item_halfHalf_secondHalf = item.halfHalf.secondHalf) === null || _item_halfHalf_secondHalf === void 0 ? void 0 : _item_halfHalf_secondHalf.category);\n                            // Garantir que as metades tenham categorias\n                            if (item.halfHalf.firstHalf && !item.halfHalf.firstHalf.category) {\n                                item.halfHalf.firstHalf.category = item.category || 'Não classificado';\n                            }\n                            if (item.halfHalf.secondHalf && !item.halfHalf.secondHalf.category) {\n                                item.halfHalf.secondHalf.category = item.category || 'Não classificado';\n                            }\n                        }\n                        // Se não tiver categoria, aplicar uma padrão\n                        if (!item.category) {\n                            return {\n                                ...item,\n                                category: 'Não classificado'\n                            };\n                        }\n                        return item;\n                    }\n                }[\"useThermalPrinter.useCallback[print]\"]);\n                let itemsHtml = '';\n                for (const item of items){\n                    // Criar um formato mais simples e robusto para a impressão\n                    itemsHtml += '\\n          <div class=\"item\">\\n            <div class=\"bold\">'.concat(item.quantity, \"x \").concat(item.name, \"</div>\\n        \");\n                    // Se for meia a meia, mostrar categorias das metades\n                    if (item.isHalfHalf && item.halfHalf) {\n                        // Implementação melhorada para obter categorias das metades\n                        let firstHalfCategory = 'Não classificado';\n                        let secondHalfCategory = 'Não classificado';\n                        // Tentativa 1: Usar diretamente da estrutura halfHalf\n                        if (item.halfHalf.firstHalf && item.halfHalf.firstHalf.category) {\n                            firstHalfCategory = item.halfHalf.firstHalf.category;\n                        }\n                        if (item.halfHalf.secondHalf && item.halfHalf.secondHalf.category) {\n                            secondHalfCategory = item.halfHalf.secondHalf.category;\n                        }\n                        // Tentativa 2: Se não encontrou categoria, tenta obter do item principal\n                        if (firstHalfCategory === 'Não classificado' && item.category) {\n                            firstHalfCategory = item.category;\n                        }\n                        if (secondHalfCategory === 'Não classificado' && item.category) {\n                            secondHalfCategory = item.category;\n                        }\n                        // Registra as categorias que serão mostradas\n                        console.log('[IMPRESSÃO] Categorias usadas na impressão:');\n                        console.log(\"Primeira metade: \".concat(firstHalfCategory));\n                        console.log(\"Segunda metade: \".concat(secondHalfCategory));\n                        // Adiciona ao HTML\n                        itemsHtml += '<div class=\"item-category\">CATEGORIA (1/2): '.concat(firstHalfCategory, \"</div>\");\n                        itemsHtml += '<div class=\"item-category\">CATEGORIA (2/2): '.concat(secondHalfCategory, \"</div>\");\n                    } else {\n                        // Se não for meia a meia, mostrar a categoria principal\n                        itemsHtml += '<div class=\"item-category\">CATEGORIA: '.concat(item.category || 'Não classificado', \"</div>\");\n                    }\n                    itemsHtml += \"\\n            <div>\".concat(formatCurrency(item.price * item.quantity), \"</div>\\n        \");\n                    // Se for meia a meia\n                    if (item.isHalfHalf && item.halfHalf) {\n                        itemsHtml += \"<div>\\xbd \".concat(item.halfHalf.firstHalf.name, \"</div>\");\n                        // Adicionais da primeira metade\n                        if (item.halfHalf.firstHalf.additions && item.halfHalf.firstHalf.additions.length > 0) {\n                            for (const addition of item.halfHalf.firstHalf.additions){\n                                itemsHtml += \"<div>&nbsp;&nbsp;+ \".concat(addition.name, \"</div>\");\n                            }\n                        }\n                        itemsHtml += \"<div>\\xbd \".concat(item.halfHalf.secondHalf.name, \"</div>\");\n                        // Adicionais da segunda metade\n                        if (item.halfHalf.secondHalf.additions && item.halfHalf.secondHalf.additions.length > 0) {\n                            for (const addition of item.halfHalf.secondHalf.additions){\n                                itemsHtml += \"<div>&nbsp;&nbsp;+ \".concat(addition.name, \"</div>\");\n                            }\n                        }\n                    } else if (item.firstHalf && item.secondHalf) {\n                        // Estrutura antiga com firstHalf e secondHalf diretamente no item\n                        itemsHtml += \"<div>\\xbd \".concat(item.firstHalf, \"</div>\");\n                        // Adicionais da primeira metade\n                        if (item.firstHalfAdditions && item.firstHalfAdditions.length > 0) {\n                            for (const addition of item.firstHalfAdditions){\n                                itemsHtml += \"<div>&nbsp;&nbsp;+ \".concat(addition.name, \"</div>\");\n                            }\n                        }\n                        itemsHtml += \"<div>\\xbd \".concat(item.secondHalf, \"</div>\");\n                        // Adicionais da segunda metade\n                        if (item.secondHalfAdditions && item.secondHalfAdditions.length > 0) {\n                            for (const addition of item.secondHalfAdditions){\n                                itemsHtml += \"<div>&nbsp;&nbsp;+ \".concat(addition.name, \"</div>\");\n                            }\n                        }\n                    } else if (item.additions && item.additions.length > 0) {\n                        for (const addition of item.additions){\n                            itemsHtml += \"<div>&nbsp;&nbsp;+ \".concat(addition.name, \"</div>\");\n                        }\n                    }\n                    // Observações do item\n                    if (item.notes || item.observations || item.observation) {\n                        itemsHtml += \"<div>Obs: \".concat(item.notes || item.observations || item.observation, \"</div>\");\n                    }\n                    itemsHtml += \"</div><hr>\";\n                }\n                // Calcular totais\n                const subtotal = orderData.subtotal || items.reduce({\n                    \"useThermalPrinter.useCallback[print]\": (acc, item)=>acc + item.price * item.quantity\n                }[\"useThermalPrinter.useCallback[print]\"], 0);\n                const deliveryFee = orderData.deliveryFee || orderData.delivery && orderData.delivery.fee || 0;\n                const discount = orderData.discount || 0;\n                const total = orderData.total || subtotal + deliveryFee - discount;\n                // Configurar o conteúdo para impressão térmica (largura fixa de 80mm)\n                printWindow.document.write('\\n        <!DOCTYPE html>\\n        <html>\\n        <head>\\n          <title>Impress\\xe3o de Pedido</title>\\n          <style>\\n            @page {\\n              size: 80mm auto;  /* Largura t\\xedpica de papel t\\xe9rmico */\\n              margin: 0;\\n            }\\n            body {\\n              font-family: monospace;\\n              font-size: 12px;\\n              width: 80mm;\\n              margin: 0 auto;\\n              padding: 5px;\\n              -webkit-print-color-adjust: exact;\\n              print-color-adjust: exact;\\n            }\\n            .print-container {\\n              width: 80mm;\\n              margin: 20px auto;\\n              border: 1px dashed #ccc;\\n              padding: 10px;\\n              background-color: white;\\n            }\\n            .center { text-align: center; }\\n            .bold { font-weight: bold; }\\n            .large { font-size: 14px; }\\n            .item-category {\\n              font-weight: bold;\\n              text-decoration: underline;\\n              padding: 2px 0;\\n              margin: 2px 0;\\n            }\\n            hr { border-top: 1px dashed #000; }\\n            .item { margin-bottom: 5px; }\\n            .total { font-weight: bold; margin-top: 10px; }\\n            .print-button {\\n              display: block;\\n              width: 200px;\\n              margin: 20px auto;\\n              padding: 10px;\\n              background-color: #4CAF50;\\n              color: white;\\n              font-size: 16px;\\n              border: none;\\n              border-radius: 4px;\\n              cursor: pointer;\\n            }\\n            .print-button:hover {\\n              background-color: #45a049;\\n            }\\n            .close-button {\\n              display: block;\\n              width: 200px;\\n              margin: 10px auto;\\n              padding: 10px;\\n              background-color: #f44336;\\n              color: white;\\n              font-size: 16px;\\n              border: none;\\n              border-radius: 4px;\\n              cursor: pointer;\\n            }\\n            .close-button:hover {\\n              background-color: #d32f2f;\\n            }\\n            .instructions {\\n              max-width: 500px;\\n              margin: 20px auto;\\n              padding: 10px;\\n              background-color: #f9f9f9;\\n              border: 1px solid #ddd;\\n              border-radius: 4px;\\n            }\\n            .section {\\n              margin-bottom: 10px;\\n            }\\n            @media print {\\n              .print-button, .close-button, .instructions {\\n                display: none;\\n              }\\n              .print-container {\\n                border: none;\\n                margin: 0;\\n                padding: 0;\\n              }\\n              @page {\\n                size: 80mm auto;\\n                margin: 0;\\n              }\\n              body {\\n                width: 100%;\\n                margin: 0;\\n                padding: 0;\\n              }\\n            }\\n          </style>\\n        </head>\\n        <body>\\n          <div class=\"instructions\">\\n            <h2>Impress\\xe3o de Pedido</h2>\\n            <p>Clique no bot\\xe3o \"Imprimir\" abaixo para enviar o pedido para a impressora.</p>\\n            <p>Certifique-se de selecionar a impressora t\\xe9rmica na caixa de di\\xe1logo de impress\\xe3o e <strong>desabilitar cabe\\xe7alhos e rodap\\xe9s</strong>.</p>\\n            <p><strong>Importante:</strong> Nas op\\xe7\\xf5es de impress\\xe3o, selecione \"Simplificado\" ou \"Modo rascunho\" se dispon\\xedvel.</p>\\n          </div>\\n          \\n          <div class=\"print-container\">\\n            <!-- Cabe\\xe7alho -->\\n            <div class=\"center bold large\">'.concat(restaurantName, '</div>\\n            <div class=\"center\">').concat(formattedDate, \" \").concat(formattedTime, '</div>\\n            <div class=\"center bold\">PEDIDO #').concat(orderId, '</div>\\n            <hr>\\n            \\n            <!-- Informa\\xe7\\xf5es do Cliente -->\\n            <div class=\"section\">\\n              <div class=\"bold\">CLIENTE:</div>\\n              <div>Nome: ').concat(customerName, \"</div>\\n              <div>Telefone: \").concat(customerPhone, '</div>\\n            </div>\\n            \\n            <!-- Tipo de Pedido -->\\n            <div class=\"section\">\\n              <div class=\"bold\">TIPO DE PEDIDO:</div>\\n              <div>').concat(orderType, \"</div>\\n              \").concat(isDelivery ? deliveryAddressHtml : '', '\\n            </div>\\n            \\n            <!-- Forma de Pagamento -->\\n            <div class=\"section\">\\n              <div class=\"bold\">PAGAMENTO:</div>\\n              <div>').concat(formattedPaymentMethod, \"</div>\\n              \").concat(changeHtml, '\\n            </div>\\n            <hr>\\n            \\n            <!-- Itens do Pedido -->\\n            <div class=\"bold\">ITENS DO PEDIDO:</div>\\n            ').concat(itemsHtml, '\\n            \\n            <!-- Totais -->\\n            <div class=\"total\">Subtotal: ').concat(formatCurrency(subtotal), \"</div>\\n            \").concat(deliveryFee > 0 ? '<div class=\"total\">Taxa de entrega: '.concat(formatCurrency(deliveryFee), \"</div>\") : '<div class=\"total\">Taxa de entrega: '.concat(formatCurrency(0), \"</div>\"), \"\\n            \").concat(discount > 0 ? \"<div>Desconto: -\".concat(formatCurrency(discount), \"</div>\") : '', '\\n            <div class=\"total large\">TOTAL: ').concat(formatCurrency(total), '</div>\\n            <div class=\"center\">* * * * * * * * * * * * * * * *</div>\\n            <div class=\"center\">Obrigado pela prefer\\xeancia!</div>\\n          </div>\\n          \\n          <button class=\"print-button\" onclick=\"printReceipt();\">Imprimir</button>\\n          <button class=\"close-button\" onclick=\"window.close();\">Fechar</button>\\n          \\n          <script>\\n            function printReceipt() {\\n              // Configura\\xe7\\xf5es para impress\\xe3o\\n              const mediaQueryList = window.matchMedia(\\'print\\');\\n              \\n              // Configurar a p\\xe1gina para impress\\xe3o\\n              const style = document.createElement(\\'style\\');\\n              style.textContent = \\'@page { size: 80mm auto; margin: 0; }\\';\\n              document.head.appendChild(style);\\n              \\n              // Remover cabe\\xe7alhos e rodap\\xe9s\\n              const oldTitle = document.title;\\n              document.title = \"\";\\n              \\n              window.print();\\n              \\n              // Restaurar t\\xedtulo\\n              document.title = oldTitle;\\n              document.head.removeChild(style);\\n            }\\n            \\n            // Fun\\xe7\\xe3o para configurar a impress\\xe3o quando a p\\xe1gina carrega\\n            window.onload = function() {\\n              // Configurar impress\\xe3o\\n              const mediaQueryList = window.matchMedia(\\'print\\');\\n              mediaQueryList.addListener(function(mql) {\\n                if (mql.matches) {\\n                  // Antes de imprimir\\n                  document.body.classList.add(\\'printing\\');\\n                } else {\\n                  // Depois de imprimir\\n                  document.body.classList.remove(\\'printing\\');\\n                }\\n              });\\n            };\\n          </script>\\n        </body>\\n        </html>\\n      '));\n                printWindow.document.close();\n                // Não fechamos a janela automaticamente, o usuário deve clicar em \"Fechar\" após imprimir\n                setIsPrinting(false);\n                return true;\n            } catch (err) {\n                console.error('Erro ao imprimir:', err);\n                setError(err.message || 'Erro desconhecido ao imprimir');\n                setIsPrinting(false);\n                return false;\n            }\n        }\n    }[\"useThermalPrinter.useCallback[print]\"], []);\n    return {\n        isPrinting,\n        isSupported,\n        hasPrinterAccess,\n        printerName,\n        requestPrinterAccess,\n        print,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-thermal-printer.ts\n"));

/***/ })

});